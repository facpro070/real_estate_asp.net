version: '3.4'

services:
# Databases
  estatesdb:
    image: mongo

  listingsdb:
    image: postgres

  clientsdb:
    image: postgres

  messagedb:
    image: redis:alpine


# API Gateway / Aggregator
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: RealEstate.ApiGateway/Dockerfile

#  shopping.aggregator:
#    image: ${DOCKER_REGISTRY-}shoppingaggregator
#    build:
#      context: .
#      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile


# Microservices
  estateswebapi:
    image: ${DOCKER_REGISTRY-}estateswebapi
    build:
      context: .
      dockerfile: Microservices/EstatesMicroservice/Dockerfile

  listingswebapi:
    image: ${DOCKER_REGISTRY-}listingswebapi
    build:
      context: .
      dockerfile: Microservices/ListingsMicroservice/Dockerfile

  clientswebapi:
    image: ${DOCKER_REGISTRY-}clientswebapi
    build:
      context: .
      dockerfile: Microservices/ClientsMicroservice/Dockerfile

  contractswebapi:
    image: ${DOCKER_REGISTRY-}contractswebapi
    build:
      context: .
      dockerfile: Microservices/ContractsMicroservice/Dockerfile

#  test.grpc:
#    image: ${DOCKER_REGISTRY-}grpc
#    build:
#      context: .
#      dockerfile: Grpc/Dockerfile


# Utilities:
  rabbitmq:
    image: rabbitmq:3-management-alpine

  pgadmin:
    image: dpage/pgadmin4  

  portainer:
    image: portainer/portainer-ce
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2


# Web - todo fix
#  appFrontendHere:
#    image: ${DOCKER_REGISTRY-}appFrontendHere
#    build:
#      context: .
#      dockerfile: RealEstate.WEB/appFrontendHere/Dockerfile

#  webstatus:
#    image: ${DOCKER_REGISTRY-}webstatus
#    build:
#      context: .
#      dockerfile: RealEstate.WEB/WebStatus/Dockerfile


# Volumes - persist data from containers
volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:
  elasticsearch-data:
