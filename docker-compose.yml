version: '3.4'

services:
# API Gateway
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: RealEstate.ApiGateway/Dockerfile


# Microservices
  estateswebapi:
    image: ${DOCKER_REGISTRY-}estateswebapi
    build:
      context: .
      dockerfile: Microservices/EstatesMicroservice/Dockerfile

  listingswebapi:
    image: ${DOCKER_REGISTRY-}listingswebapi
    build:
      context: .
      dockerfile: Microservices/ListingsMicroservice/Dockerfile

  clientswebapi:
    image: ${DOCKER_REGISTRY-}clientswebapi
    build:
      context: .
      dockerfile: Microservices/ClientsMicroservice/Dockerfile
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  contractswebapi:
    image: ${DOCKER_REGISTRY-}contractswebapi
    build:
      context: .
      dockerfile: Microservices/ContractsMicroservice/Dockerfile


# Utilities:
  rabbitmq:
    image: rabbitmq:3-management-alpine
  pgadmin:
    image: dpage/pgadmin4  
  portainer:
    image: portainer/portainer-ce
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2


# Database + Keycloak
  db.postgresql:
    image: postgres:13.3

  keycloak:
    image: quay.io/keycloak/keycloak:16.1.1


  db.messages:
    image: redis:alpine


# Volumes - persist data from containers
volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:
  elasticsearch-data:



















## Micro-Databases 
#  db.estates:
#    image: postgres
#  db.contracts:
#    image: postgres
#  db.clients:
#    image: postgres
#  db.listings:
#    image: postgres
#  db.identity:    
#    image: postgres

#  realestate.aggregator:
#    image: ${DOCKER_REGISTRY-}realestateaggregator
#    build:
#      context: .
#      dockerfile:  RealEstate.Aggregator/Dockerfile

#  test.grpc:
#    image: ${DOCKER_REGISTRY-}grpc
#    build:
#      context: .
#      dockerfile: Grpc/Dockerfile

# Web - todo fix
#  appFrontendHere:
#    image: ${DOCKER_REGISTRY-}appFrontendHere
#    build:
#      context: .
#      dockerfile: RealEstate.WEB/appFrontendHere/Dockerfile

#  webstatus:
#    image: ${DOCKER_REGISTRY-}webstatus
#    build:
#      context: .
#      dockerfile: RealEstate.WEB/WebStatus/Dockerfile