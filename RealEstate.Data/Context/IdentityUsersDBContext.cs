using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using RealEstate.Data.Extensions;
using RealEstate.Data.Identity;
using RealEstate.Models.Entities.Clients;

namespace RealEstate.Data.Context
{
    public class IdentityUsersDBContext : IdentityDbContext<ApplicationUser>
    {
        public IdentityUsersDBContext(DbContextOptions<IdentityUsersDBContext> options)
            : base(options) { }

        public DbSet<ApplicationUser> ApplicationUsers { get; set; }

        // The Identity Tables will be AutoGenerated here:
        /*
        User            Represents the user.
        Role            Represents a role.
        UserClaim       Represents a claim that a user possesses.
        UserToken       Represents an authentication token for a user.
        UserLogin       Associates a user with a login.
        RoleClaim       Represents a claim that's granted to all users within a role.
        UserRole        A join entity that associates users and roles.
        */

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            // This just needs to be called once on application startup
            EnvironmentConfigInData.LoadFromEnvironmentVariable();

            // Fetch config from connectionStrings.json
            var identityPostgreConnectionString = EnvironmentConfigInData.Current.PostgreIdentityConnection;

            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder
                    .UseNpgsql(identityPostgreConnectionString);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Contact>().HasIndex(c => c.Id).IsUnique();


            base.OnModelCreating(modelBuilder);
            // This is required as it initializes Identity
        }
    }
}